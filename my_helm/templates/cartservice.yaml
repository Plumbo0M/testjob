apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.cartService.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.cartService.name }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.cartService.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.cartService.name }}
        release: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: {{ .Values.images.repository }}/{{ .Values.cartService.name }}:{{ .Values.images.tag | default .Chart.AppVersion }}
        ports:
        - containerPort: 7070
        env:
        {{- if eq .Values.cartDatabase.type "spanner" }}
        - name: SPANNER_CONNECTION_STRING
        {{- else }}
        - name: REDIS_ADDR
        {{- end }}
          value: {{ .Values.cartDatabase.connectionString | quote }}
        resources:
          {{- toYaml .Values.cartService.resources | nindent 10 }}
        readinessProbe:
          initialDelaySeconds: 15
          grpc:
            port: 7070
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          grpc:
            port: 7070
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.cartService.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.cartService.name }}
    release: {{ .Release.Name }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Values.cartService.name }}
    release: {{ .Release.Name }}
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
{{- if .Values.cartDatabase.inClusterRedis.create }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.cartDatabase.inClusterRedis.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.cartDatabase.inClusterRedis.name }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.cartDatabase.inClusterRedis.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.cartDatabase.inClusterRedis.name }}
        release: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: redis
        image: {{ .Values.cartDatabase.inClusterRedis.redisImage | default "redis:alpine@sha256:c35af3bbcef51a62c8bae5a9a563c6f1b60d7ebaea4cb5a3ccbcc157580ae098" }}
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        resources:
          limits:
            memory: 512Mi
            cpu: 250m
          requests:
            cpu: 125m
            memory: 300Mi
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.cartDatabase.inClusterRedis.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.cartDatabase.inClusterRedis.name }}
    release: {{ .Release.Name }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Values.cartDatabase.inClusterRedis.name }}
    release: {{ .Release.Name }}
  ports:
  - name: tcp-redis
    port: 6379
    targetPort: 6379
{{- end }}
